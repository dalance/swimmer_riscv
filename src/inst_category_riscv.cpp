/*
 * Copyright (c) 2015, msyksphinz
 * All rights reserved.
 *
 *   Redistribution and use in source and binary forms, with or without
 *   modification, are permitted provided that the following conditions are met:
 *   * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *   * Neither the name of the copyright holder nor the
 *     names of its contributors may be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
 *   DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* CAUTION! THIS SOURCE CODE IS GENERATED AUTOMATICALLY. DON'T MODIFY BY HAND. */


#include <stdint.h>
#include <execinfo.h>
#include "inst_list_riscv.hpp"
#include "inst_decoder_riscv.hpp"
#include "inst_category_riscv.hpp"

void gen_backtrace ();

InstCategory RiscvDec::GetInstCategory (InstId_t inst_id)
{
  switch (inst_id) {
    case InstId_t::INST_ID_LUI : return InstCategory::ALU;
    case InstId_t::INST_ID_AUIPC : return InstCategory::ALU;
    case InstId_t::INST_ID_JAL : return InstCategory::BRU;
    case InstId_t::INST_ID_JALR : return InstCategory::BRU;
    case InstId_t::INST_ID_BEQ : return InstCategory::BRU;
    case InstId_t::INST_ID_BNE : return InstCategory::BRU;
    case InstId_t::INST_ID_BLT : return InstCategory::BRU;
    case InstId_t::INST_ID_BGE : return InstCategory::BRU;
    case InstId_t::INST_ID_BLTU : return InstCategory::BRU;
    case InstId_t::INST_ID_BGEU : return InstCategory::BRU;
    case InstId_t::INST_ID_LB : return InstCategory::LSU;
    case InstId_t::INST_ID_LH : return InstCategory::LSU;
    case InstId_t::INST_ID_LW : return InstCategory::LSU;
    case InstId_t::INST_ID_LBU : return InstCategory::LSU;
    case InstId_t::INST_ID_LHU : return InstCategory::LSU;
    case InstId_t::INST_ID_SB : return InstCategory::LSU;
    case InstId_t::INST_ID_SH : return InstCategory::LSU;
    case InstId_t::INST_ID_SW : return InstCategory::LSU;
    case InstId_t::INST_ID_ADDI : return InstCategory::ALU;
    case InstId_t::INST_ID_SLTI : return InstCategory::ALU;
    case InstId_t::INST_ID_SLTIU : return InstCategory::ALU;
    case InstId_t::INST_ID_XORI : return InstCategory::ALU;
    case InstId_t::INST_ID_ORI : return InstCategory::ALU;
    case InstId_t::INST_ID_ANDI : return InstCategory::ALU;
    case InstId_t::INST_ID_SLLI : return InstCategory::ALU;
    case InstId_t::INST_ID_SRLI : return InstCategory::ALU;
    case InstId_t::INST_ID_SRAI : return InstCategory::ALU;
    case InstId_t::INST_ID_ADD : return InstCategory::ALU;
    case InstId_t::INST_ID_SUB : return InstCategory::ALU;
    case InstId_t::INST_ID_SLL : return InstCategory::ALU;
    case InstId_t::INST_ID_SLT : return InstCategory::ALU;
    case InstId_t::INST_ID_SLTU : return InstCategory::ALU;
    case InstId_t::INST_ID_XOR : return InstCategory::ALU;
    case InstId_t::INST_ID_SRL : return InstCategory::ALU;
    case InstId_t::INST_ID_SRA : return InstCategory::ALU;
    case InstId_t::INST_ID_OR : return InstCategory::ALU;
    case InstId_t::INST_ID_AND : return InstCategory::ALU;
    case InstId_t::INST_ID_FENCE : return InstCategory::ALU;
    case InstId_t::INST_ID_FENCE_I : return InstCategory::ALU;
    case InstId_t::INST_ID_MUL : return InstCategory::ALU;
    case InstId_t::INST_ID_MULH : return InstCategory::ALU;
    case InstId_t::INST_ID_MULHSU : return InstCategory::ALU;
    case InstId_t::INST_ID_MULHU : return InstCategory::ALU;
    case InstId_t::INST_ID_DIV : return InstCategory::ALU;
    case InstId_t::INST_ID_DIVU : return InstCategory::ALU;
    case InstId_t::INST_ID_REM : return InstCategory::ALU;
    case InstId_t::INST_ID_REMU : return InstCategory::ALU;
    case InstId_t::INST_ID_LR_W : return InstCategory::LSU;
    case InstId_t::INST_ID_SC_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOSWAP_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOADD_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOXOR_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOAND_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOOR_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMIN_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMAX_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMINU_W : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMAXU_W : return InstCategory::LSU;
    case InstId_t::INST_ID_FLW : return InstCategory::LSU;
    case InstId_t::INST_ID_FSW : return InstCategory::LSU;
    case InstId_t::INST_ID_FMADD_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FMSUB_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FNMSUB_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FNMADD_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FADD_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FSUB_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FMUL_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FDIV_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FSQRT_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FSGNJ_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FSGNJN_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FSGNJX_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FMIN_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FMAX_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_W_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_WU_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FMV_X_W : return InstCategory::FPU;
    case InstId_t::INST_ID_FEQ_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FLT_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FLE_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FCLASS_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_S_W : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_S_WU : return InstCategory::FPU;
    case InstId_t::INST_ID_FMV_W_X : return InstCategory::FPU;
    case InstId_t::INST_ID_FLD : return InstCategory::LSU;
    case InstId_t::INST_ID_FSD : return InstCategory::LSU;
    case InstId_t::INST_ID_FMADD_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FMSUB_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FNMSUB_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FNMADD_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FADD_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FSUB_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FMUL_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FDIV_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FSQRT_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FSGNJ_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FSGNJN_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FSGNJX_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FMIN_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FMAX_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_S_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_D_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FEQ_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FLT_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FLE_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCLASS_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_W_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_WU_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_D_W : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_D_WU : return InstCategory::FPU;
    case InstId_t::INST_ID_CSRRW : return InstCategory::ALU;
    case InstId_t::INST_ID_CSRRS : return InstCategory::ALU;
    case InstId_t::INST_ID_CSRRC : return InstCategory::ALU;
    case InstId_t::INST_ID_CSRRWI : return InstCategory::ALU;
    case InstId_t::INST_ID_CSRRSI : return InstCategory::ALU;
    case InstId_t::INST_ID_CSRRCI : return InstCategory::ALU;
    case InstId_t::INST_ID_ECALL : return InstCategory::ALU;
    case InstId_t::INST_ID_EBREAK : return InstCategory::ALU;
    case InstId_t::INST_ID_URET : return InstCategory::ALU;
    case InstId_t::INST_ID_SRET : return InstCategory::ALU;
    case InstId_t::INST_ID_HRET : return InstCategory::ALU;
    case InstId_t::INST_ID_MRET : return InstCategory::ALU;
    case InstId_t::INST_ID_MRTS : return InstCategory::ALU;
    case InstId_t::INST_ID_MRTH : return InstCategory::ALU;
    case InstId_t::INST_ID_WFI : return InstCategory::ALU;
    case InstId_t::INST_ID_SFENCE_VMA : return InstCategory::ALU;
    case InstId_t::INST_ID_LWU : return InstCategory::ALU;
    case InstId_t::INST_ID_LD : return InstCategory::ALU;
    case InstId_t::INST_ID_SD : return InstCategory::ALU;
    case InstId_t::INST_ID_ADDIW : return InstCategory::ALU;
    case InstId_t::INST_ID_SLLIW : return InstCategory::ALU;
    case InstId_t::INST_ID_SRLIW : return InstCategory::ALU;
    case InstId_t::INST_ID_SRAIW : return InstCategory::ALU;
    case InstId_t::INST_ID_ADDW : return InstCategory::ALU;
    case InstId_t::INST_ID_SUBW : return InstCategory::ALU;
    case InstId_t::INST_ID_SLLW : return InstCategory::ALU;
    case InstId_t::INST_ID_SRLW : return InstCategory::ALU;
    case InstId_t::INST_ID_SRAW : return InstCategory::ALU;
    case InstId_t::INST_ID_MULW : return InstCategory::ALU;
    case InstId_t::INST_ID_DIVW : return InstCategory::ALU;
    case InstId_t::INST_ID_DIVUW : return InstCategory::ALU;
    case InstId_t::INST_ID_REMW : return InstCategory::ALU;
    case InstId_t::INST_ID_REMUW : return InstCategory::ALU;
    case InstId_t::INST_ID_LR_D : return InstCategory::LSU;
    case InstId_t::INST_ID_SC_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOSWAP_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOADD_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOXOR_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOAND_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOOR_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMIN_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMAX_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMINU_D : return InstCategory::LSU;
    case InstId_t::INST_ID_AMOMAXU_D : return InstCategory::LSU;
    case InstId_t::INST_ID_FCVT_L_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_LU_S : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_S_L : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_S_LU : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_L_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_LU_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FMV_X_D : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_D_L : return InstCategory::FPU;
    case InstId_t::INST_ID_FCVT_D_LU : return InstCategory::FPU;
    case InstId_t::INST_ID_FMV_D_X : return InstCategory::FPU;
    case InstId_t::INST_ID_C_ADDI4SPN : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FLD : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_LW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FLW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_LD : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FSD : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FSW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SD : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_NOP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_ADDI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_JAL : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_ADDIW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_LI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_ADDI16SP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_LUI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SRLI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SRLI64 : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SRAI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SRAI64 : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_ANDI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SUB : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_XOR : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_OR : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_AND : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SUBW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_ADDW : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_J : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_BEQZ : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_BNEZ : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SLLI : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FLDSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_LWSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FLWSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_LDSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_JR : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_MV : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_EBREAK : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_JALR : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_ADD : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FSDSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SWSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_FSWSP : return InstCategory::COMPRESS;
    case InstId_t::INST_ID_C_SDSP : return InstCategory::COMPRESS;
    default: fprintf(stderr, "<Internal Error. Can't get Catgory of InstId=%d. Exit.>\n", static_cast<uint32_t>(inst_id)); gen_backtrace(); exit(EXIT_FAILURE);
  }
}

InstSuffix RiscvDec::GetInstSuffix (InstId_t inst_id)
{
  switch (inst_id) {
    case InstId_t::INST_ID_LUI : return InstSuffix::None;
    case InstId_t::INST_ID_AUIPC : return InstSuffix::None;
    case InstId_t::INST_ID_JAL : return InstSuffix::None;
    case InstId_t::INST_ID_JALR : return InstSuffix::None;
    case InstId_t::INST_ID_BEQ : return InstSuffix::None;
    case InstId_t::INST_ID_BNE : return InstSuffix::None;
    case InstId_t::INST_ID_BLT : return InstSuffix::None;
    case InstId_t::INST_ID_BGE : return InstSuffix::None;
    case InstId_t::INST_ID_BLTU : return InstSuffix::None;
    case InstId_t::INST_ID_BGEU : return InstSuffix::None;
    case InstId_t::INST_ID_LB : return InstSuffix::None;
    case InstId_t::INST_ID_LH : return InstSuffix::None;
    case InstId_t::INST_ID_LW : return InstSuffix::None;
    case InstId_t::INST_ID_LBU : return InstSuffix::None;
    case InstId_t::INST_ID_LHU : return InstSuffix::None;
    case InstId_t::INST_ID_SB : return InstSuffix::None;
    case InstId_t::INST_ID_SH : return InstSuffix::None;
    case InstId_t::INST_ID_SW : return InstSuffix::None;
    case InstId_t::INST_ID_ADDI : return InstSuffix::None;
    case InstId_t::INST_ID_SLTI : return InstSuffix::None;
    case InstId_t::INST_ID_SLTIU : return InstSuffix::None;
    case InstId_t::INST_ID_XORI : return InstSuffix::None;
    case InstId_t::INST_ID_ORI : return InstSuffix::None;
    case InstId_t::INST_ID_ANDI : return InstSuffix::None;
    case InstId_t::INST_ID_SLLI : return InstSuffix::None;
    case InstId_t::INST_ID_SRLI : return InstSuffix::None;
    case InstId_t::INST_ID_SRAI : return InstSuffix::None;
    case InstId_t::INST_ID_ADD : return InstSuffix::None;
    case InstId_t::INST_ID_SUB : return InstSuffix::None;
    case InstId_t::INST_ID_SLL : return InstSuffix::None;
    case InstId_t::INST_ID_SLT : return InstSuffix::None;
    case InstId_t::INST_ID_SLTU : return InstSuffix::None;
    case InstId_t::INST_ID_XOR : return InstSuffix::None;
    case InstId_t::INST_ID_SRL : return InstSuffix::None;
    case InstId_t::INST_ID_SRA : return InstSuffix::None;
    case InstId_t::INST_ID_OR : return InstSuffix::None;
    case InstId_t::INST_ID_AND : return InstSuffix::None;
    case InstId_t::INST_ID_FENCE : return InstSuffix::None;
    case InstId_t::INST_ID_FENCE_I : return InstSuffix::None;
    case InstId_t::INST_ID_MUL : return InstSuffix::None;
    case InstId_t::INST_ID_MULH : return InstSuffix::None;
    case InstId_t::INST_ID_MULHSU : return InstSuffix::None;
    case InstId_t::INST_ID_MULHU : return InstSuffix::None;
    case InstId_t::INST_ID_DIV : return InstSuffix::None;
    case InstId_t::INST_ID_DIVU : return InstSuffix::None;
    case InstId_t::INST_ID_REM : return InstSuffix::None;
    case InstId_t::INST_ID_REMU : return InstSuffix::None;
    case InstId_t::INST_ID_LR_W : return InstSuffix::None;
    case InstId_t::INST_ID_SC_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOSWAP_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOADD_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOXOR_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOAND_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOOR_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMIN_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMAX_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMINU_W : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMAXU_W : return InstSuffix::None;
    case InstId_t::INST_ID_FLW : return InstSuffix::None;
    case InstId_t::INST_ID_FSW : return InstSuffix::None;
    case InstId_t::INST_ID_FMADD_S : return InstSuffix::None;
    case InstId_t::INST_ID_FMSUB_S : return InstSuffix::None;
    case InstId_t::INST_ID_FNMSUB_S : return InstSuffix::None;
    case InstId_t::INST_ID_FNMADD_S : return InstSuffix::None;
    case InstId_t::INST_ID_FADD_S : return InstSuffix::None;
    case InstId_t::INST_ID_FSUB_S : return InstSuffix::None;
    case InstId_t::INST_ID_FMUL_S : return InstSuffix::None;
    case InstId_t::INST_ID_FDIV_S : return InstSuffix::None;
    case InstId_t::INST_ID_FSQRT_S : return InstSuffix::None;
    case InstId_t::INST_ID_FSGNJ_S : return InstSuffix::None;
    case InstId_t::INST_ID_FSGNJN_S : return InstSuffix::None;
    case InstId_t::INST_ID_FSGNJX_S : return InstSuffix::None;
    case InstId_t::INST_ID_FMIN_S : return InstSuffix::None;
    case InstId_t::INST_ID_FMAX_S : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_W_S : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_WU_S : return InstSuffix::None;
    case InstId_t::INST_ID_FMV_X_W : return InstSuffix::None;
    case InstId_t::INST_ID_FEQ_S : return InstSuffix::None;
    case InstId_t::INST_ID_FLT_S : return InstSuffix::None;
    case InstId_t::INST_ID_FLE_S : return InstSuffix::None;
    case InstId_t::INST_ID_FCLASS_S : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_S_W : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_S_WU : return InstSuffix::None;
    case InstId_t::INST_ID_FMV_W_X : return InstSuffix::None;
    case InstId_t::INST_ID_FLD : return InstSuffix::None;
    case InstId_t::INST_ID_FSD : return InstSuffix::None;
    case InstId_t::INST_ID_FMADD_D : return InstSuffix::None;
    case InstId_t::INST_ID_FMSUB_D : return InstSuffix::None;
    case InstId_t::INST_ID_FNMSUB_D : return InstSuffix::None;
    case InstId_t::INST_ID_FNMADD_D : return InstSuffix::None;
    case InstId_t::INST_ID_FADD_D : return InstSuffix::None;
    case InstId_t::INST_ID_FSUB_D : return InstSuffix::None;
    case InstId_t::INST_ID_FMUL_D : return InstSuffix::None;
    case InstId_t::INST_ID_FDIV_D : return InstSuffix::None;
    case InstId_t::INST_ID_FSQRT_D : return InstSuffix::None;
    case InstId_t::INST_ID_FSGNJ_D : return InstSuffix::None;
    case InstId_t::INST_ID_FSGNJN_D : return InstSuffix::None;
    case InstId_t::INST_ID_FSGNJX_D : return InstSuffix::None;
    case InstId_t::INST_ID_FMIN_D : return InstSuffix::None;
    case InstId_t::INST_ID_FMAX_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_S_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_D_S : return InstSuffix::None;
    case InstId_t::INST_ID_FEQ_D : return InstSuffix::None;
    case InstId_t::INST_ID_FLT_D : return InstSuffix::None;
    case InstId_t::INST_ID_FLE_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCLASS_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_W_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_WU_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_D_W : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_D_WU : return InstSuffix::None;
    case InstId_t::INST_ID_CSRRW : return InstSuffix::None;
    case InstId_t::INST_ID_CSRRS : return InstSuffix::None;
    case InstId_t::INST_ID_CSRRC : return InstSuffix::None;
    case InstId_t::INST_ID_CSRRWI : return InstSuffix::None;
    case InstId_t::INST_ID_CSRRSI : return InstSuffix::None;
    case InstId_t::INST_ID_CSRRCI : return InstSuffix::None;
    case InstId_t::INST_ID_ECALL : return InstSuffix::None;
    case InstId_t::INST_ID_EBREAK : return InstSuffix::None;
    case InstId_t::INST_ID_URET : return InstSuffix::None;
    case InstId_t::INST_ID_SRET : return InstSuffix::None;
    case InstId_t::INST_ID_HRET : return InstSuffix::None;
    case InstId_t::INST_ID_MRET : return InstSuffix::None;
    case InstId_t::INST_ID_MRTS : return InstSuffix::None;
    case InstId_t::INST_ID_MRTH : return InstSuffix::None;
    case InstId_t::INST_ID_WFI : return InstSuffix::None;
    case InstId_t::INST_ID_SFENCE_VMA : return InstSuffix::None;
    case InstId_t::INST_ID_LWU : return InstSuffix::None;
    case InstId_t::INST_ID_LD : return InstSuffix::None;
    case InstId_t::INST_ID_SD : return InstSuffix::None;
    case InstId_t::INST_ID_ADDIW : return InstSuffix::None;
    case InstId_t::INST_ID_SLLIW : return InstSuffix::None;
    case InstId_t::INST_ID_SRLIW : return InstSuffix::None;
    case InstId_t::INST_ID_SRAIW : return InstSuffix::None;
    case InstId_t::INST_ID_ADDW : return InstSuffix::None;
    case InstId_t::INST_ID_SUBW : return InstSuffix::None;
    case InstId_t::INST_ID_SLLW : return InstSuffix::None;
    case InstId_t::INST_ID_SRLW : return InstSuffix::None;
    case InstId_t::INST_ID_SRAW : return InstSuffix::None;
    case InstId_t::INST_ID_MULW : return InstSuffix::None;
    case InstId_t::INST_ID_DIVW : return InstSuffix::None;
    case InstId_t::INST_ID_DIVUW : return InstSuffix::None;
    case InstId_t::INST_ID_REMW : return InstSuffix::None;
    case InstId_t::INST_ID_REMUW : return InstSuffix::None;
    case InstId_t::INST_ID_LR_D : return InstSuffix::None;
    case InstId_t::INST_ID_SC_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOSWAP_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOADD_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOXOR_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOAND_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOOR_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMIN_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMAX_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMINU_D : return InstSuffix::None;
    case InstId_t::INST_ID_AMOMAXU_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_L_S : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_LU_S : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_S_L : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_S_LU : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_L_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_LU_D : return InstSuffix::None;
    case InstId_t::INST_ID_FMV_X_D : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_D_L : return InstSuffix::None;
    case InstId_t::INST_ID_FCVT_D_LU : return InstSuffix::None;
    case InstId_t::INST_ID_FMV_D_X : return InstSuffix::None;
    case InstId_t::INST_ID_C_ADDI4SPN : return InstSuffix::None;
    case InstId_t::INST_ID_C_FLD : return InstSuffix::None;
    case InstId_t::INST_ID_C_LW : return InstSuffix::None;
    case InstId_t::INST_ID_C_FLW : return InstSuffix::None;
    case InstId_t::INST_ID_C_LD : return InstSuffix::None;
    case InstId_t::INST_ID_C_FSD : return InstSuffix::None;
    case InstId_t::INST_ID_C_SW : return InstSuffix::None;
    case InstId_t::INST_ID_C_FSW : return InstSuffix::None;
    case InstId_t::INST_ID_C_SD : return InstSuffix::None;
    case InstId_t::INST_ID_C_NOP : return InstSuffix::None;
    case InstId_t::INST_ID_C_ADDI : return InstSuffix::None;
    case InstId_t::INST_ID_C_JAL : return InstSuffix::None;
    case InstId_t::INST_ID_C_ADDIW : return InstSuffix::None;
    case InstId_t::INST_ID_C_LI : return InstSuffix::None;
    case InstId_t::INST_ID_C_ADDI16SP : return InstSuffix::None;
    case InstId_t::INST_ID_C_LUI : return InstSuffix::None;
    case InstId_t::INST_ID_C_SRLI : return InstSuffix::None;
    case InstId_t::INST_ID_C_SRLI64 : return InstSuffix::None;
    case InstId_t::INST_ID_C_SRAI : return InstSuffix::None;
    case InstId_t::INST_ID_C_SRAI64 : return InstSuffix::None;
    case InstId_t::INST_ID_C_ANDI : return InstSuffix::None;
    case InstId_t::INST_ID_C_SUB : return InstSuffix::None;
    case InstId_t::INST_ID_C_XOR : return InstSuffix::None;
    case InstId_t::INST_ID_C_OR : return InstSuffix::None;
    case InstId_t::INST_ID_C_AND : return InstSuffix::None;
    case InstId_t::INST_ID_C_SUBW : return InstSuffix::None;
    case InstId_t::INST_ID_C_ADDW : return InstSuffix::None;
    case InstId_t::INST_ID_C_J : return InstSuffix::None;
    case InstId_t::INST_ID_C_BEQZ : return InstSuffix::None;
    case InstId_t::INST_ID_C_BNEZ : return InstSuffix::None;
    case InstId_t::INST_ID_C_SLLI : return InstSuffix::None;
    case InstId_t::INST_ID_C_FLDSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_LWSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_FLWSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_LDSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_JR : return InstSuffix::None;
    case InstId_t::INST_ID_C_MV : return InstSuffix::None;
    case InstId_t::INST_ID_C_EBREAK : return InstSuffix::None;
    case InstId_t::INST_ID_C_JALR : return InstSuffix::None;
    case InstId_t::INST_ID_C_ADD : return InstSuffix::None;
    case InstId_t::INST_ID_C_FSDSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_SWSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_FSWSP : return InstSuffix::None;
    case InstId_t::INST_ID_C_SDSP : return InstSuffix::None;
    default: fprintf(stderr, "<Internal Error. Can't get Suffix of InstId=%d. Exit.>\n", static_cast<uint32_t>(inst_id)); gen_backtrace(); exit(EXIT_FAILURE);
  }
}

uint32_t RiscvDec::GetInstLength (InstId_t inst_id)
{
  switch (inst_id) {
    case InstId_t::INST_ID_LUI : return 32;
    case InstId_t::INST_ID_AUIPC : return 32;
    case InstId_t::INST_ID_JAL : return 32;
    case InstId_t::INST_ID_JALR : return 32;
    case InstId_t::INST_ID_BEQ : return 32;
    case InstId_t::INST_ID_BNE : return 32;
    case InstId_t::INST_ID_BLT : return 32;
    case InstId_t::INST_ID_BGE : return 32;
    case InstId_t::INST_ID_BLTU : return 32;
    case InstId_t::INST_ID_BGEU : return 32;
    case InstId_t::INST_ID_LB : return 32;
    case InstId_t::INST_ID_LH : return 32;
    case InstId_t::INST_ID_LW : return 32;
    case InstId_t::INST_ID_LBU : return 32;
    case InstId_t::INST_ID_LHU : return 32;
    case InstId_t::INST_ID_SB : return 32;
    case InstId_t::INST_ID_SH : return 32;
    case InstId_t::INST_ID_SW : return 32;
    case InstId_t::INST_ID_ADDI : return 32;
    case InstId_t::INST_ID_SLTI : return 32;
    case InstId_t::INST_ID_SLTIU : return 32;
    case InstId_t::INST_ID_XORI : return 32;
    case InstId_t::INST_ID_ORI : return 32;
    case InstId_t::INST_ID_ANDI : return 32;
    case InstId_t::INST_ID_SLLI : return 32;
    case InstId_t::INST_ID_SRLI : return 32;
    case InstId_t::INST_ID_SRAI : return 32;
    case InstId_t::INST_ID_ADD : return 32;
    case InstId_t::INST_ID_SUB : return 32;
    case InstId_t::INST_ID_SLL : return 32;
    case InstId_t::INST_ID_SLT : return 32;
    case InstId_t::INST_ID_SLTU : return 32;
    case InstId_t::INST_ID_XOR : return 32;
    case InstId_t::INST_ID_SRL : return 32;
    case InstId_t::INST_ID_SRA : return 32;
    case InstId_t::INST_ID_OR : return 32;
    case InstId_t::INST_ID_AND : return 32;
    case InstId_t::INST_ID_FENCE : return 32;
    case InstId_t::INST_ID_FENCE_I : return 32;
    case InstId_t::INST_ID_MUL : return 32;
    case InstId_t::INST_ID_MULH : return 32;
    case InstId_t::INST_ID_MULHSU : return 32;
    case InstId_t::INST_ID_MULHU : return 32;
    case InstId_t::INST_ID_DIV : return 32;
    case InstId_t::INST_ID_DIVU : return 32;
    case InstId_t::INST_ID_REM : return 32;
    case InstId_t::INST_ID_REMU : return 32;
    case InstId_t::INST_ID_LR_W : return 32;
    case InstId_t::INST_ID_SC_W : return 32;
    case InstId_t::INST_ID_AMOSWAP_W : return 32;
    case InstId_t::INST_ID_AMOADD_W : return 32;
    case InstId_t::INST_ID_AMOXOR_W : return 32;
    case InstId_t::INST_ID_AMOAND_W : return 32;
    case InstId_t::INST_ID_AMOOR_W : return 32;
    case InstId_t::INST_ID_AMOMIN_W : return 32;
    case InstId_t::INST_ID_AMOMAX_W : return 32;
    case InstId_t::INST_ID_AMOMINU_W : return 32;
    case InstId_t::INST_ID_AMOMAXU_W : return 32;
    case InstId_t::INST_ID_FLW : return 32;
    case InstId_t::INST_ID_FSW : return 32;
    case InstId_t::INST_ID_FMADD_S : return 32;
    case InstId_t::INST_ID_FMSUB_S : return 32;
    case InstId_t::INST_ID_FNMSUB_S : return 32;
    case InstId_t::INST_ID_FNMADD_S : return 32;
    case InstId_t::INST_ID_FADD_S : return 32;
    case InstId_t::INST_ID_FSUB_S : return 32;
    case InstId_t::INST_ID_FMUL_S : return 32;
    case InstId_t::INST_ID_FDIV_S : return 32;
    case InstId_t::INST_ID_FSQRT_S : return 32;
    case InstId_t::INST_ID_FSGNJ_S : return 32;
    case InstId_t::INST_ID_FSGNJN_S : return 32;
    case InstId_t::INST_ID_FSGNJX_S : return 32;
    case InstId_t::INST_ID_FMIN_S : return 32;
    case InstId_t::INST_ID_FMAX_S : return 32;
    case InstId_t::INST_ID_FCVT_W_S : return 32;
    case InstId_t::INST_ID_FCVT_WU_S : return 32;
    case InstId_t::INST_ID_FMV_X_W : return 32;
    case InstId_t::INST_ID_FEQ_S : return 32;
    case InstId_t::INST_ID_FLT_S : return 32;
    case InstId_t::INST_ID_FLE_S : return 32;
    case InstId_t::INST_ID_FCLASS_S : return 32;
    case InstId_t::INST_ID_FCVT_S_W : return 32;
    case InstId_t::INST_ID_FCVT_S_WU : return 32;
    case InstId_t::INST_ID_FMV_W_X : return 32;
    case InstId_t::INST_ID_FLD : return 32;
    case InstId_t::INST_ID_FSD : return 32;
    case InstId_t::INST_ID_FMADD_D : return 32;
    case InstId_t::INST_ID_FMSUB_D : return 32;
    case InstId_t::INST_ID_FNMSUB_D : return 32;
    case InstId_t::INST_ID_FNMADD_D : return 32;
    case InstId_t::INST_ID_FADD_D : return 32;
    case InstId_t::INST_ID_FSUB_D : return 32;
    case InstId_t::INST_ID_FMUL_D : return 32;
    case InstId_t::INST_ID_FDIV_D : return 32;
    case InstId_t::INST_ID_FSQRT_D : return 32;
    case InstId_t::INST_ID_FSGNJ_D : return 32;
    case InstId_t::INST_ID_FSGNJN_D : return 32;
    case InstId_t::INST_ID_FSGNJX_D : return 32;
    case InstId_t::INST_ID_FMIN_D : return 32;
    case InstId_t::INST_ID_FMAX_D : return 32;
    case InstId_t::INST_ID_FCVT_S_D : return 32;
    case InstId_t::INST_ID_FCVT_D_S : return 32;
    case InstId_t::INST_ID_FEQ_D : return 32;
    case InstId_t::INST_ID_FLT_D : return 32;
    case InstId_t::INST_ID_FLE_D : return 32;
    case InstId_t::INST_ID_FCLASS_D : return 32;
    case InstId_t::INST_ID_FCVT_W_D : return 32;
    case InstId_t::INST_ID_FCVT_WU_D : return 32;
    case InstId_t::INST_ID_FCVT_D_W : return 32;
    case InstId_t::INST_ID_FCVT_D_WU : return 32;
    case InstId_t::INST_ID_CSRRW : return 32;
    case InstId_t::INST_ID_CSRRS : return 32;
    case InstId_t::INST_ID_CSRRC : return 32;
    case InstId_t::INST_ID_CSRRWI : return 32;
    case InstId_t::INST_ID_CSRRSI : return 32;
    case InstId_t::INST_ID_CSRRCI : return 32;
    case InstId_t::INST_ID_ECALL : return 32;
    case InstId_t::INST_ID_EBREAK : return 32;
    case InstId_t::INST_ID_URET : return 32;
    case InstId_t::INST_ID_SRET : return 32;
    case InstId_t::INST_ID_HRET : return 32;
    case InstId_t::INST_ID_MRET : return 32;
    case InstId_t::INST_ID_MRTS : return 32;
    case InstId_t::INST_ID_MRTH : return 32;
    case InstId_t::INST_ID_WFI : return 32;
    case InstId_t::INST_ID_SFENCE_VMA : return 32;
    case InstId_t::INST_ID_LWU : return 32;
    case InstId_t::INST_ID_LD : return 32;
    case InstId_t::INST_ID_SD : return 32;
    case InstId_t::INST_ID_ADDIW : return 32;
    case InstId_t::INST_ID_SLLIW : return 32;
    case InstId_t::INST_ID_SRLIW : return 32;
    case InstId_t::INST_ID_SRAIW : return 32;
    case InstId_t::INST_ID_ADDW : return 32;
    case InstId_t::INST_ID_SUBW : return 32;
    case InstId_t::INST_ID_SLLW : return 32;
    case InstId_t::INST_ID_SRLW : return 32;
    case InstId_t::INST_ID_SRAW : return 32;
    case InstId_t::INST_ID_MULW : return 32;
    case InstId_t::INST_ID_DIVW : return 32;
    case InstId_t::INST_ID_DIVUW : return 32;
    case InstId_t::INST_ID_REMW : return 32;
    case InstId_t::INST_ID_REMUW : return 32;
    case InstId_t::INST_ID_LR_D : return 32;
    case InstId_t::INST_ID_SC_D : return 32;
    case InstId_t::INST_ID_AMOSWAP_D : return 32;
    case InstId_t::INST_ID_AMOADD_D : return 32;
    case InstId_t::INST_ID_AMOXOR_D : return 32;
    case InstId_t::INST_ID_AMOAND_D : return 32;
    case InstId_t::INST_ID_AMOOR_D : return 32;
    case InstId_t::INST_ID_AMOMIN_D : return 32;
    case InstId_t::INST_ID_AMOMAX_D : return 32;
    case InstId_t::INST_ID_AMOMINU_D : return 32;
    case InstId_t::INST_ID_AMOMAXU_D : return 32;
    case InstId_t::INST_ID_FCVT_L_S : return 32;
    case InstId_t::INST_ID_FCVT_LU_S : return 32;
    case InstId_t::INST_ID_FCVT_S_L : return 32;
    case InstId_t::INST_ID_FCVT_S_LU : return 32;
    case InstId_t::INST_ID_FCVT_L_D : return 32;
    case InstId_t::INST_ID_FCVT_LU_D : return 32;
    case InstId_t::INST_ID_FMV_X_D : return 32;
    case InstId_t::INST_ID_FCVT_D_L : return 32;
    case InstId_t::INST_ID_FCVT_D_LU : return 32;
    case InstId_t::INST_ID_FMV_D_X : return 32;
    case InstId_t::INST_ID_C_ADDI4SPN : return 16;
    case InstId_t::INST_ID_C_FLD : return 16;
    case InstId_t::INST_ID_C_LW : return 16;
    case InstId_t::INST_ID_C_FLW : return 16;
    case InstId_t::INST_ID_C_LD : return 16;
    case InstId_t::INST_ID_C_FSD : return 16;
    case InstId_t::INST_ID_C_SW : return 16;
    case InstId_t::INST_ID_C_FSW : return 16;
    case InstId_t::INST_ID_C_SD : return 16;
    case InstId_t::INST_ID_C_NOP : return 16;
    case InstId_t::INST_ID_C_ADDI : return 16;
    case InstId_t::INST_ID_C_JAL : return 16;
    case InstId_t::INST_ID_C_ADDIW : return 16;
    case InstId_t::INST_ID_C_LI : return 16;
    case InstId_t::INST_ID_C_ADDI16SP : return 16;
    case InstId_t::INST_ID_C_LUI : return 16;
    case InstId_t::INST_ID_C_SRLI : return 16;
    case InstId_t::INST_ID_C_SRLI64 : return 16;
    case InstId_t::INST_ID_C_SRAI : return 16;
    case InstId_t::INST_ID_C_SRAI64 : return 16;
    case InstId_t::INST_ID_C_ANDI : return 16;
    case InstId_t::INST_ID_C_SUB : return 16;
    case InstId_t::INST_ID_C_XOR : return 16;
    case InstId_t::INST_ID_C_OR : return 16;
    case InstId_t::INST_ID_C_AND : return 16;
    case InstId_t::INST_ID_C_SUBW : return 16;
    case InstId_t::INST_ID_C_ADDW : return 16;
    case InstId_t::INST_ID_C_J : return 16;
    case InstId_t::INST_ID_C_BEQZ : return 16;
    case InstId_t::INST_ID_C_BNEZ : return 16;
    case InstId_t::INST_ID_C_SLLI : return 16;
    case InstId_t::INST_ID_C_FLDSP : return 16;
    case InstId_t::INST_ID_C_LWSP : return 16;
    case InstId_t::INST_ID_C_FLWSP : return 16;
    case InstId_t::INST_ID_C_LDSP : return 16;
    case InstId_t::INST_ID_C_JR : return 16;
    case InstId_t::INST_ID_C_MV : return 16;
    case InstId_t::INST_ID_C_EBREAK : return 16;
    case InstId_t::INST_ID_C_JALR : return 16;
    case InstId_t::INST_ID_C_ADD : return 16;
    case InstId_t::INST_ID_C_FSDSP : return 16;
    case InstId_t::INST_ID_C_SWSP : return 16;
    case InstId_t::INST_ID_C_FSWSP : return 16;
    case InstId_t::INST_ID_C_SDSP : return 16;
    default: fprintf(stderr, "<Internal Error. Can't get Length of InstId=%d. Exit.>\n", static_cast<uint32_t>(inst_id)); gen_backtrace(); exit(EXIT_FAILURE);
  }
}

uint32_t RiscvDec::GetInstHexTemplate (InstId_t inst_id)
{
  switch (inst_id) {
    case InstId_t::INST_ID_LUI : return 0x00000037;
    case InstId_t::INST_ID_AUIPC : return 0x00000017;
    case InstId_t::INST_ID_JAL : return 0x0000006f;
    case InstId_t::INST_ID_JALR : return 0x00000067;
    case InstId_t::INST_ID_BEQ : return 0x00000063;
    case InstId_t::INST_ID_BNE : return 0x00001063;
    case InstId_t::INST_ID_BLT : return 0x00004063;
    case InstId_t::INST_ID_BGE : return 0x00005063;
    case InstId_t::INST_ID_BLTU : return 0x00006063;
    case InstId_t::INST_ID_BGEU : return 0x00007063;
    case InstId_t::INST_ID_LB : return 0x00000003;
    case InstId_t::INST_ID_LH : return 0x00001003;
    case InstId_t::INST_ID_LW : return 0x00002003;
    case InstId_t::INST_ID_LBU : return 0x00004003;
    case InstId_t::INST_ID_LHU : return 0x00005003;
    case InstId_t::INST_ID_SB : return 0x00000023;
    case InstId_t::INST_ID_SH : return 0x00001023;
    case InstId_t::INST_ID_SW : return 0x00002023;
    case InstId_t::INST_ID_ADDI : return 0x00000013;
    case InstId_t::INST_ID_SLTI : return 0x00002013;
    case InstId_t::INST_ID_SLTIU : return 0x00003013;
    case InstId_t::INST_ID_XORI : return 0x00004013;
    case InstId_t::INST_ID_ORI : return 0x00006013;
    case InstId_t::INST_ID_ANDI : return 0x00007013;
    case InstId_t::INST_ID_SLLI : return 0x00001013;
    case InstId_t::INST_ID_SRLI : return 0x00005013;
    case InstId_t::INST_ID_SRAI : return 0x40005013;
    case InstId_t::INST_ID_ADD : return 0x00000033;
    case InstId_t::INST_ID_SUB : return 0x40000033;
    case InstId_t::INST_ID_SLL : return 0x00001033;
    case InstId_t::INST_ID_SLT : return 0x00002033;
    case InstId_t::INST_ID_SLTU : return 0x00003033;
    case InstId_t::INST_ID_XOR : return 0x00004033;
    case InstId_t::INST_ID_SRL : return 0x00005033;
    case InstId_t::INST_ID_SRA : return 0x40005033;
    case InstId_t::INST_ID_OR : return 0x00006033;
    case InstId_t::INST_ID_AND : return 0x00007033;
    case InstId_t::INST_ID_FENCE : return 0x0000000f;
    case InstId_t::INST_ID_FENCE_I : return 0x0000100f;
    case InstId_t::INST_ID_MUL : return 0x02000033;
    case InstId_t::INST_ID_MULH : return 0x02001033;
    case InstId_t::INST_ID_MULHSU : return 0x02002033;
    case InstId_t::INST_ID_MULHU : return 0x02003033;
    case InstId_t::INST_ID_DIV : return 0x02004033;
    case InstId_t::INST_ID_DIVU : return 0x02005033;
    case InstId_t::INST_ID_REM : return 0x02006033;
    case InstId_t::INST_ID_REMU : return 0x02007033;
    case InstId_t::INST_ID_LR_W : return 0x1000202f;
    case InstId_t::INST_ID_SC_W : return 0x1800202f;
    case InstId_t::INST_ID_AMOSWAP_W : return 0x0800202f;
    case InstId_t::INST_ID_AMOADD_W : return 0x0000202f;
    case InstId_t::INST_ID_AMOXOR_W : return 0x2000202f;
    case InstId_t::INST_ID_AMOAND_W : return 0x6000202f;
    case InstId_t::INST_ID_AMOOR_W : return 0x4000202f;
    case InstId_t::INST_ID_AMOMIN_W : return 0x8000202f;
    case InstId_t::INST_ID_AMOMAX_W : return 0xa000202f;
    case InstId_t::INST_ID_AMOMINU_W : return 0xc000202f;
    case InstId_t::INST_ID_AMOMAXU_W : return 0xe000202f;
    case InstId_t::INST_ID_FLW : return 0x00002007;
    case InstId_t::INST_ID_FSW : return 0x00002027;
    case InstId_t::INST_ID_FMADD_S : return 0x00000043;
    case InstId_t::INST_ID_FMSUB_S : return 0x00000047;
    case InstId_t::INST_ID_FNMSUB_S : return 0x0000004b;
    case InstId_t::INST_ID_FNMADD_S : return 0x0000004f;
    case InstId_t::INST_ID_FADD_S : return 0x00000053;
    case InstId_t::INST_ID_FSUB_S : return 0x08000053;
    case InstId_t::INST_ID_FMUL_S : return 0x10000053;
    case InstId_t::INST_ID_FDIV_S : return 0x18000053;
    case InstId_t::INST_ID_FSQRT_S : return 0x58000053;
    case InstId_t::INST_ID_FSGNJ_S : return 0x20000053;
    case InstId_t::INST_ID_FSGNJN_S : return 0x20001053;
    case InstId_t::INST_ID_FSGNJX_S : return 0x20002053;
    case InstId_t::INST_ID_FMIN_S : return 0x28000053;
    case InstId_t::INST_ID_FMAX_S : return 0x28001053;
    case InstId_t::INST_ID_FCVT_W_S : return 0xc0000053;
    case InstId_t::INST_ID_FCVT_WU_S : return 0xc0100053;
    case InstId_t::INST_ID_FMV_X_W : return 0xe0000053;
    case InstId_t::INST_ID_FEQ_S : return 0xa0002053;
    case InstId_t::INST_ID_FLT_S : return 0xa0001053;
    case InstId_t::INST_ID_FLE_S : return 0xa0000053;
    case InstId_t::INST_ID_FCLASS_S : return 0xe0001053;
    case InstId_t::INST_ID_FCVT_S_W : return 0xd0000053;
    case InstId_t::INST_ID_FCVT_S_WU : return 0xd0100053;
    case InstId_t::INST_ID_FMV_W_X : return 0xf0000053;
    case InstId_t::INST_ID_FLD : return 0x00003007;
    case InstId_t::INST_ID_FSD : return 0x00003027;
    case InstId_t::INST_ID_FMADD_D : return 0x02000043;
    case InstId_t::INST_ID_FMSUB_D : return 0x02000047;
    case InstId_t::INST_ID_FNMSUB_D : return 0x0200004b;
    case InstId_t::INST_ID_FNMADD_D : return 0x0200004f;
    case InstId_t::INST_ID_FADD_D : return 0x02000053;
    case InstId_t::INST_ID_FSUB_D : return 0x0a000053;
    case InstId_t::INST_ID_FMUL_D : return 0x12000053;
    case InstId_t::INST_ID_FDIV_D : return 0x1a000053;
    case InstId_t::INST_ID_FSQRT_D : return 0x5a000053;
    case InstId_t::INST_ID_FSGNJ_D : return 0x22000053;
    case InstId_t::INST_ID_FSGNJN_D : return 0x22001053;
    case InstId_t::INST_ID_FSGNJX_D : return 0x22002053;
    case InstId_t::INST_ID_FMIN_D : return 0x2a000053;
    case InstId_t::INST_ID_FMAX_D : return 0x2a001053;
    case InstId_t::INST_ID_FCVT_S_D : return 0x40100053;
    case InstId_t::INST_ID_FCVT_D_S : return 0x42000053;
    case InstId_t::INST_ID_FEQ_D : return 0xa2002053;
    case InstId_t::INST_ID_FLT_D : return 0xa2001053;
    case InstId_t::INST_ID_FLE_D : return 0xa2000053;
    case InstId_t::INST_ID_FCLASS_D : return 0xe2001053;
    case InstId_t::INST_ID_FCVT_W_D : return 0xc2000053;
    case InstId_t::INST_ID_FCVT_WU_D : return 0xc2100053;
    case InstId_t::INST_ID_FCVT_D_W : return 0xd2000053;
    case InstId_t::INST_ID_FCVT_D_WU : return 0xd2100053;
    case InstId_t::INST_ID_CSRRW : return 0x00001073;
    case InstId_t::INST_ID_CSRRS : return 0x00002073;
    case InstId_t::INST_ID_CSRRC : return 0x00003073;
    case InstId_t::INST_ID_CSRRWI : return 0x00005073;
    case InstId_t::INST_ID_CSRRSI : return 0x00006073;
    case InstId_t::INST_ID_CSRRCI : return 0x00007073;
    case InstId_t::INST_ID_ECALL : return 0x00000073;
    case InstId_t::INST_ID_EBREAK : return 0x00100073;
    case InstId_t::INST_ID_URET : return 0x00200073;
    case InstId_t::INST_ID_SRET : return 0x10200073;
    case InstId_t::INST_ID_HRET : return 0x20200073;
    case InstId_t::INST_ID_MRET : return 0x30200073;
    case InstId_t::INST_ID_MRTS : return 0x30500073;
    case InstId_t::INST_ID_MRTH : return 0x20600073;
    case InstId_t::INST_ID_WFI : return 0x10500073;
    case InstId_t::INST_ID_SFENCE_VMA : return 0x12000073;
    case InstId_t::INST_ID_LWU : return 0x00006003;
    case InstId_t::INST_ID_LD : return 0x00003003;
    case InstId_t::INST_ID_SD : return 0x00003023;
    case InstId_t::INST_ID_ADDIW : return 0x0000001b;
    case InstId_t::INST_ID_SLLIW : return 0x0000101b;
    case InstId_t::INST_ID_SRLIW : return 0x0000501b;
    case InstId_t::INST_ID_SRAIW : return 0x4000501b;
    case InstId_t::INST_ID_ADDW : return 0x0000003b;
    case InstId_t::INST_ID_SUBW : return 0x4000003b;
    case InstId_t::INST_ID_SLLW : return 0x0000103b;
    case InstId_t::INST_ID_SRLW : return 0x0000503b;
    case InstId_t::INST_ID_SRAW : return 0x4000503b;
    case InstId_t::INST_ID_MULW : return 0x0200003b;
    case InstId_t::INST_ID_DIVW : return 0x0200403b;
    case InstId_t::INST_ID_DIVUW : return 0x0200503b;
    case InstId_t::INST_ID_REMW : return 0x0200603b;
    case InstId_t::INST_ID_REMUW : return 0x0200703b;
    case InstId_t::INST_ID_LR_D : return 0x1000302f;
    case InstId_t::INST_ID_SC_D : return 0x1800302f;
    case InstId_t::INST_ID_AMOSWAP_D : return 0x0800302f;
    case InstId_t::INST_ID_AMOADD_D : return 0x0000302f;
    case InstId_t::INST_ID_AMOXOR_D : return 0x2000302f;
    case InstId_t::INST_ID_AMOAND_D : return 0x6000302f;
    case InstId_t::INST_ID_AMOOR_D : return 0x4000302f;
    case InstId_t::INST_ID_AMOMIN_D : return 0x8000302f;
    case InstId_t::INST_ID_AMOMAX_D : return 0xa000302f;
    case InstId_t::INST_ID_AMOMINU_D : return 0xc000302f;
    case InstId_t::INST_ID_AMOMAXU_D : return 0xe000302f;
    case InstId_t::INST_ID_FCVT_L_S : return 0xc0200053;
    case InstId_t::INST_ID_FCVT_LU_S : return 0xc0300053;
    case InstId_t::INST_ID_FCVT_S_L : return 0xd0200053;
    case InstId_t::INST_ID_FCVT_S_LU : return 0xd0300053;
    case InstId_t::INST_ID_FCVT_L_D : return 0xc2200053;
    case InstId_t::INST_ID_FCVT_LU_D : return 0xc2300053;
    case InstId_t::INST_ID_FMV_X_D : return 0xe2000053;
    case InstId_t::INST_ID_FCVT_D_L : return 0xd2200053;
    case InstId_t::INST_ID_FCVT_D_LU : return 0xd2300053;
    case InstId_t::INST_ID_FMV_D_X : return 0xf2000053;
    case InstId_t::INST_ID_C_ADDI4SPN : return 0x00000000;
    case InstId_t::INST_ID_C_FLD : return 0x00002000;
    case InstId_t::INST_ID_C_LW : return 0x00004000;
    case InstId_t::INST_ID_C_FLW : return 0x00006000;
    case InstId_t::INST_ID_C_LD : return 0x00006000;
    case InstId_t::INST_ID_C_FSD : return 0x0000a000;
    case InstId_t::INST_ID_C_SW : return 0x0000c000;
    case InstId_t::INST_ID_C_FSW : return 0x0000e000;
    case InstId_t::INST_ID_C_SD : return 0x0000e000;
    case InstId_t::INST_ID_C_NOP : return 0x00000001;
    case InstId_t::INST_ID_C_ADDI : return 0x00000001;
    case InstId_t::INST_ID_C_JAL : return 0x00002001;
    case InstId_t::INST_ID_C_ADDIW : return 0x00002001;
    case InstId_t::INST_ID_C_LI : return 0x00004001;
    case InstId_t::INST_ID_C_ADDI16SP : return 0x00006101;
    case InstId_t::INST_ID_C_LUI : return 0x00006001;
    case InstId_t::INST_ID_C_SRLI : return 0x00008001;
    case InstId_t::INST_ID_C_SRLI64 : return 0x00009001;
    case InstId_t::INST_ID_C_SRAI : return 0x00008401;
    case InstId_t::INST_ID_C_SRAI64 : return 0x00009401;
    case InstId_t::INST_ID_C_ANDI : return 0x00008801;
    case InstId_t::INST_ID_C_SUB : return 0x00008c01;
    case InstId_t::INST_ID_C_XOR : return 0x00008c21;
    case InstId_t::INST_ID_C_OR : return 0x00008c41;
    case InstId_t::INST_ID_C_AND : return 0x00008c61;
    case InstId_t::INST_ID_C_SUBW : return 0x00009c01;
    case InstId_t::INST_ID_C_ADDW : return 0x00009c21;
    case InstId_t::INST_ID_C_J : return 0x0000a001;
    case InstId_t::INST_ID_C_BEQZ : return 0x0000c001;
    case InstId_t::INST_ID_C_BNEZ : return 0x0000e001;
    case InstId_t::INST_ID_C_SLLI : return 0x00000002;
    case InstId_t::INST_ID_C_FLDSP : return 0x00002002;
    case InstId_t::INST_ID_C_LWSP : return 0x00004002;
    case InstId_t::INST_ID_C_FLWSP : return 0x00006002;
    case InstId_t::INST_ID_C_LDSP : return 0x00006002;
    case InstId_t::INST_ID_C_JR : return 0x00008002;
    case InstId_t::INST_ID_C_MV : return 0x00008002;
    case InstId_t::INST_ID_C_EBREAK : return 0x00009002;
    case InstId_t::INST_ID_C_JALR : return 0x00009002;
    case InstId_t::INST_ID_C_ADD : return 0x00009002;
    case InstId_t::INST_ID_C_FSDSP : return 0x0000a002;
    case InstId_t::INST_ID_C_SWSP : return 0x0000c002;
    case InstId_t::INST_ID_C_FSWSP : return 0x0000e002;
    case InstId_t::INST_ID_C_SDSP : return 0x0000e002;
    default: fprintf(stderr, "<Internal Error. Can't get Length of InstId=%d. Exit.>\n", static_cast<uint32_t>(inst_id)); gen_backtrace(); exit(EXIT_FAILURE);
  }
}

void gen_backtrace () {
  int j, nptrs;
#define SIZE 100
  void *buffer[100];
  char **strings;

  nptrs = backtrace(buffer, SIZE);
  printf("backtrace() returned %d addresses\n", nptrs);

  /* backtrace_symbols_fd(buffer, nptrs, STDOUT_FILENO) を
     呼び出しても、以下と同様の出力が得られる。 */

  strings = backtrace_symbols(buffer, nptrs);
  if (strings == NULL) {
    perror("backtrace_symbols");
    exit(EXIT_FAILURE);
  }

  for (j = 0; j < nptrs; j++)
    printf("%s\n", strings[j]);

  free(strings);
}
